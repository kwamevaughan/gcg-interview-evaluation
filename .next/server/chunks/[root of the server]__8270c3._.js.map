{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/lib/supabase.js"],"sourcesContent":["// lib/supabase.js\nimport { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseKey = process.env.SUPABASE_SERVICE_KEY; // Use service key for server-side\n\nconsole.log(\"Supabase URL:\", supabaseUrl);\nconsole.log(\"Supabase Key:\", supabaseKey);\n\nexport const supabase = createClient(supabaseUrl, supabaseKey);"],"names":[],"mappings":"AAAA,kBAAkB;;;;AAClB;;AAEA,MAAM;AACN,MAAM,cAAc,QAAQ,GAAG,CAAC,oBAAoB,EAAE,kCAAkC;AAExF,QAAQ,GAAG,CAAC,iBAAiB;AAC7B,QAAQ,GAAG,CAAC,iBAAiB;AAEtB,MAAM,WAAW,CAAA,GAAA,iJAAA,CAAA,eAAY,AAAD,EAAE,aAAa"}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/src/pages/api/submit.js"],"sourcesContent":["// src/pages/api/submit.js\nimport { supabase } from \"../../../lib/supabase\";\nimport { upsertCandidate, upsertResponse } from \"../../../utils/dbUtils\";\nimport { uploadFileToDrive } from \"../../../utils/driveUtils\";\nimport { sendEmails } from \"../../../utils/emailUtils\";\nimport { calculateScore } from \"../../../utils/scoreUtils\";\nimport fs from \"fs\";\nimport path from \"path\";\n\nexport const config = {\n    api: {\n        bodyParser: {\n            sizeLimit: \"5mb\",\n        },\n    },\n};\n\nexport default async function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({ error: \"Method not allowed\" });\n    }\n\n    try {\n        const { fullName, email, phone, linkedin, answers, resume, coverLetter } = req.body;\n\n        console.log(\"Received data:\", {\n            fullName,\n            email,\n            phone,\n            linkedin,\n            answers,\n            resume: resume ? \"present\" : \"none\",\n            coverLetter: coverLetter ? \"present\" : \"none\",\n        });\n\n        if (!fullName || !email) {\n            return res.status(400).json({ error: \"Full name and email are required\" });\n        }\n\n        // Handle candidate upsert\n        const { userId, error: candidateError } = await upsertCandidate({ fullName, email, phone, linkedin });\n        if (candidateError) {\n            return res.status(candidateError.status).json({ error: candidateError.message, details: candidateError.details });\n        }\n\n        const score = calculateScore(answers);\n\n        // Upload files to Google Drive\n        const resumeUrl = resume ? await uploadFileToDrive(userId, resume, \"resume\") : null;\n        const coverLetterUrl = coverLetter ? await uploadFileToDrive(userId, coverLetter, \"cover-letter\") : null;\n\n        // Handle response upsert\n        const { error: responseError } = await upsertResponse({\n            userId,\n            answers,\n            score,\n            resumeUrl,\n            coverLetterUrl,\n        });\n        if (responseError) {\n            return res.status(responseError.status).json({ error: responseError.message, details: responseError.details });\n        }\n\n        // Send emails\n        const candidateEmailTemplate = fs.readFileSync(path.join(process.cwd(), \"src/templates/candidateEmail.html\"), \"utf8\");\n        const adminEmailTemplate = fs.readFileSync(path.join(process.cwd(), \"src/templates/adminEmail.html\"), \"utf8\");\n\n        await sendEmails({\n            fullName,\n            email,\n            phone,\n            linkedin,\n            score,\n            resumeUrl,\n            coverLetterUrl,\n            answers,\n            candidateTemplate: candidateEmailTemplate,\n            adminTemplate: adminEmailTemplate,\n        });\n\n        return res.status(200).json({ message: \"Submission successful\", score });\n    } catch (error) {\n        console.error(\"Submission error:\", error.message);\n        return res.status(500).json({ error: \"Internal server error\", details: error.message });\n    }\n}"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAC1B;;;;;;;;;;;;;;;;;;;;;AAKA;AACA;;;;;;;;AAEO,MAAM,SAAS;IAClB,KAAK;QACD,YAAY;YACR,WAAW;QACf;IACJ;AACJ;AAEe,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC1C,IAAI,IAAI,MAAM,KAAK,QAAQ;QACvB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAqB;IAC9D;IAEA,IAAI;QACA,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,IAAI;QAEnF,QAAQ,GAAG,CAAC,kBAAkB;YAC1B;YACA;YACA;YACA;YACA;YACA,QAAQ,SAAS,YAAY;YAC7B,aAAa,cAAc,YAAY;QAC3C;QAEA,IAAI,CAAC,YAAY,CAAC,OAAO;YACrB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAAmC;QAC5E;QAEA,0BAA0B;QAC1B,MAAM,EAAE,MAAM,EAAE,OAAO,cAAc,EAAE,GAAG,MAAM,gBAAgB;YAAE;YAAU;YAAO;YAAO;QAAS;QACnG,IAAI,gBAAgB;YAChB,OAAO,IAAI,MAAM,CAAC,eAAe,MAAM,EAAE,IAAI,CAAC;gBAAE,OAAO,eAAe,OAAO;gBAAE,SAAS,eAAe,OAAO;YAAC;QACnH;QAEA,MAAM,QAAQ,eAAe;QAE7B,+BAA+B;QAC/B,MAAM,YAAY,SAAS,MAAM,kBAAkB,QAAQ,QAAQ,YAAY;QAC/E,MAAM,iBAAiB,cAAc,MAAM,kBAAkB,QAAQ,aAAa,kBAAkB;QAEpG,yBAAyB;QACzB,MAAM,EAAE,OAAO,aAAa,EAAE,GAAG,MAAM,eAAe;YAClD;YACA;YACA;YACA;YACA;QACJ;QACA,IAAI,eAAe;YACf,OAAO,IAAI,MAAM,CAAC,cAAc,MAAM,EAAE,IAAI,CAAC;gBAAE,OAAO,cAAc,OAAO;gBAAE,SAAS,cAAc,OAAO;YAAC;QAChH;QAEA,cAAc;QACd,MAAM,yBAAyB,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,sCAAsC;QAC9G,MAAM,qBAAqB,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,kCAAkC;QAEtG,MAAM,WAAW;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA,mBAAmB;YACnB,eAAe;QACnB;QAEA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;YAAyB;QAAM;IAC1E,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qBAAqB,MAAM,OAAO;QAChD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;YAAyB,SAAS,MAAM,OAAO;QAAC;IACzF;AACJ"}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,wHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,wHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}