{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/src/context/UserContext.js"],"sourcesContent":["// @/context/UserContext.js\nimport { createContext, useContext, useState, useEffect } from 'react';\n\nconst UserContext = createContext();\n\nexport function UserProvider({ children }) {\n    const [token, setToken] = useState(null);\n    const [user, setUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        const storedToken = localStorage.getItem('custom_auth_token');\n        const storedUser = localStorage.getItem('custom_auth_user');\n        if (storedToken && storedUser) {\n            fetch('/api/auth/verify', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ token: storedToken }),\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.valid) {\n                        setToken(storedToken);\n                        setUser(JSON.parse(storedUser));\n                    } else {\n                        setToken(null);\n                        setUser(null);\n                        localStorage.removeItem('custom_auth_token');\n                        localStorage.removeItem('custom_auth_user');\n                    }\n                    setIsLoading(false);\n                })\n                .catch(error => {\n                    setToken(null);\n                    setUser(null);\n                    localStorage.removeItem('custom_auth_token');\n                    localStorage.removeItem('custom_auth_user');\n                    setIsLoading(false);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    }, []);\n\n    const login = async (email, password, recaptchaToken) => {\n        const response = await fetch('/api/auth/login', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ email, password, recaptchaToken }),\n        });\n\n        const data = await response.json();\n        if (!response.ok) {\n            throw new Error(data.error || 'Login failed');\n        }\n\n        setToken(data.token);\n        setUser(data.user);\n        localStorage.setItem('custom_auth_token', data.token);\n        localStorage.setItem('custom_auth_user', JSON.stringify(data.user));\n\n        return data;\n    };\n\n    const logout = () => {\n        setToken(null);\n        setUser(null);\n        localStorage.removeItem('custom_auth_token');\n        localStorage.removeItem('custom_auth_user');\n    };\n\n    return (\n        <UserContext.Provider value={{ token, setToken, user, setUser, login, logout, isLoading }}>\n            {children}\n        </UserContext.Provider>\n    );\n}\n\nexport function useUser() {\n    return useContext(UserContext);\n}"],"names":[],"mappings":"AAAA,2BAA2B;;;;;;AAC3B;;;AAEA,MAAM,4BAAc,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD;AAEzB,SAAS,aAAa,EAAE,QAAQ,EAAE;IACrC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,cAAc,aAAa,OAAO,CAAC;QACzC,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,IAAI,eAAe,YAAY;YAC3B,MAAM,oBAAoB;gBACtB,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE,OAAO;gBAAY;YAC9C,GACK,IAAI,CAAC,CAAA,WAAY,SAAS,IAAI,IAC9B,IAAI,CAAC,CAAA;gBACF,IAAI,KAAK,KAAK,EAAE;oBACZ,SAAS;oBACT,QAAQ,KAAK,KAAK,CAAC;gBACvB,OAAO;oBACH,SAAS;oBACT,QAAQ;oBACR,aAAa,UAAU,CAAC;oBACxB,aAAa,UAAU,CAAC;gBAC5B;gBACA,aAAa;YACjB,GACC,KAAK,CAAC,CAAA;gBACH,SAAS;gBACT,QAAQ;gBACR,aAAa,UAAU,CAAC;gBACxB,aAAa,UAAU,CAAC;gBACxB,aAAa;YACjB;QACR,OAAO;YACH,aAAa;QACjB;IACJ,GAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAO,UAAU;QAClC,MAAM,WAAW,MAAM,MAAM,mBAAmB;YAC5C,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;gBAAU;YAAe;QAC3D;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI;QAClC;QAEA,SAAS,KAAK,KAAK;QACnB,QAAQ,KAAK,IAAI;QACjB,aAAa,OAAO,CAAC,qBAAqB,KAAK,KAAK;QACpD,aAAa,OAAO,CAAC,oBAAoB,KAAK,SAAS,CAAC,KAAK,IAAI;QAEjE,OAAO;IACX;IAEA,MAAM,SAAS;QACX,SAAS;QACT,QAAQ;QACR,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;IAC5B;IAEA,qBACI,qKAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAO;YAAU;YAAM;YAAS;YAAO;YAAQ;QAAU;kBACnF;;;;;;AAGb;AAEO,SAAS;IACZ,OAAO,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/src/pages/_app.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { UserProvider, useUser } from '@/context/UserContext';\nimport SessionExpired from '../components/SessionExpired';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/globals.css';\n\nfunction MyApp({ Component, pageProps }) {\n    const [mode, setMode] = useState('light');\n    const [isSessionExpired, setIsSessionExpired] = useState(false);\n    const router = useRouter();\n\n    // Check session on page load or when route changes\n    useEffect(() => {\n        const savedMode = localStorage.getItem('mode');\n        if (savedMode) {\n            setMode(savedMode);\n        } else {\n            const systemMode = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n            setMode(systemMode);\n        }\n\n        const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n        const handleChange = (e) => {\n            if (savedMode === 'system') {\n                setMode(e.matches ? 'dark' : 'light');\n            }\n        };\n        mediaQuery.addEventListener('change', handleChange);\n\n        return () => {\n            mediaQuery.removeEventListener('change', handleChange);\n        };\n    }, []);\n\n    return (\n        <UserProvider>\n            <UserComponent\n                mode={mode}\n                isSessionExpired={isSessionExpired}  // Pass isSessionExpired here\n                setIsSessionExpired={setIsSessionExpired}\n                router={router}\n                Component={Component}\n                pageProps={pageProps}\n            />\n            <ToastContainer position=\"top-right\" />\n        </UserProvider>\n    );\n}\n\nconst UserComponent = ({ mode, isSessionExpired, setIsSessionExpired, router, Component, pageProps }) => {\n    const { user, token, setToken, setUser } = useUser(); // Destructure setUser here\n\n\n\n\n\n    return (\n        <div className={mode === 'dark' ? 'dark' : ''}>\n            <Component {...pageProps} mode={mode} />\n        </div>\n    );\n};\n\nexport default MyApp;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAIA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACnC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IAEvB,mDAAmD;IACnD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,YAAY,aAAa,OAAO,CAAC;QACvC,IAAI,WAAW;YACX,QAAQ;QACZ,OAAO;YACH,MAAM,aAAa,OAAO,UAAU,CAAC,gCAAgC,OAAO,GAAG,SAAS;YACxF,QAAQ;QACZ;QAEA,MAAM,aAAa,OAAO,UAAU,CAAC;QACrC,MAAM,eAAe,CAAC;YAClB,IAAI,cAAc,UAAU;gBACxB,QAAQ,EAAE,OAAO,GAAG,SAAS;YACjC;QACJ;QACA,WAAW,gBAAgB,CAAC,UAAU;QAEtC,OAAO;YACH,WAAW,mBAAmB,CAAC,UAAU;QAC7C;IACJ,GAAG,EAAE;IAEL,qBACI,qKAAC,sHAAA,CAAA,eAAY;;0BACT,qKAAC;gBACG,MAAM;gBACN,kBAAkB;gBAClB,qBAAqB;gBACrB,QAAQ;gBACR,WAAW;gBACX,WAAW;;;;;;0BAEf,qKAAC,kIAAA,CAAA,iBAAc;gBAAC,UAAS;;;;;;;;;;;;AAGrC;AAEA,MAAM,gBAAgB,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IAChG,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,sHAAA,CAAA,UAAO,AAAD,KAAK,2BAA2B;IAMjF,qBACI,qKAAC;QAAI,WAAW,SAAS,SAAS,SAAS;kBACvC,cAAA,qKAAC;YAAW,GAAG,SAAS;YAAE,MAAM;;;;;;;;;;;AAG5C;uCAEe"}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}