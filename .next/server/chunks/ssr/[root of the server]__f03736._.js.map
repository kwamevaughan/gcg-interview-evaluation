{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/src/pages/_document.js"],"sourcesContent":["import Document, { Html, Head, Main, NextScript } from 'next/document';\n\nclass MyDocument extends Document {\n    render() {\n        return (\n            <Html lang=\"en\">\n                <Head>\n                    {/* Add Google Fonts for Questrial */}\n                    <link\n                        href=\"https://fonts.googleapis.com/css2?family=Questrial&display=swap\"\n                        rel=\"stylesheet\"\n                    />\n                    {/* Favicon Links */}\n                    <link rel=\"icon\" href=\"/favicon.png\" />\n                    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\" />\n                    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\" />\n                    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\" />\n                    <title>GCG Personality Evaluation Test</title>\n                    {/* Google Tag Manager Script */}\n                </Head>\n                <body style={{ fontFamily: 'Questrial, sans-serif' }}>\n                {/* Google Tag Manager (noscript) */}\n                <Main />\n                <NextScript />\n                </body>\n            </Html>\n        );\n    }\n}\n\nexport default MyDocument;\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,mBAAmB,yHAAA,CAAA,UAAQ;IAC7B,SAAS;QACL,qBACI,qKAAC,yHAAA,CAAA,OAAI;YAAC,MAAK;;8BACP,qKAAC,yHAAA,CAAA,OAAI;;sCAED,qKAAC;4BACG,MAAK;4BACL,KAAI;;;;;;sCAGR,qKAAC;4BAAK,KAAI;4BAAO,MAAK;;;;;;sCACtB,qKAAC;4BAAK,KAAI;4BAAmB,OAAM;4BAAU,MAAK;;;;;;sCAClD,qKAAC;4BAAK,KAAI;4BAAO,MAAK;4BAAY,OAAM;4BAAQ,MAAK;;;;;;sCACrD,qKAAC;4BAAK,KAAI;4BAAO,MAAK;4BAAY,OAAM;4BAAQ,MAAK;;;;;;sCACrD,qKAAC;sCAAM;;;;;;;;;;;;8BAGX,qKAAC;oBAAK,OAAO;wBAAE,YAAY;oBAAwB;;sCAEnD,qKAAC,yHAAA,CAAA,OAAI;;;;;sCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;IAIvB;AACJ;uCAEe"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/src/pages/_app.js"],"sourcesContent":["// src/pages/_app.js\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../styles/globals.css\";\n\nfunction MyApp({ Component, pageProps }) {\n    const [mode, setMode] = useState(\"light\");\n    const router = useRouter();\n\n    // Toggle dark mode and persist in localStorage\n    const toggleMode = () => {\n        const newMode = mode === \"light\" ? \"dark\" : \"light\";\n        setMode(newMode);\n        localStorage.setItem(\"mode\", newMode);\n    };\n\n    useEffect(() => {\n        // Load saved mode or system preference on mount\n        const savedMode = localStorage.getItem(\"mode\");\n        if (savedMode) {\n            setMode(savedMode);\n        } else {\n            const systemMode = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n            setMode(systemMode);\n            localStorage.setItem(\"mode\", systemMode);\n        }\n\n        // Listen for system theme changes\n        const mediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n        const handleChange = (e) => {\n            const systemMode = e.matches ? \"dark\" : \"light\";\n            if (!localStorage.getItem(\"mode\")) {\n                setMode(systemMode);\n            }\n        };\n        mediaQuery.addEventListener(\"change\", handleChange);\n\n        return () => mediaQuery.removeEventListener(\"change\", handleChange);\n    }, []);\n\n    return (\n        <div className={mode === \"dark\" ? \"dark\" : \"\"}>\n            <Component {...pageProps} mode={mode} toggleMode={toggleMode} />\n            <ToastContainer position=\"top-right\" theme={mode === \"dark\" ? \"dark\" : \"light\"} />\n        </div>\n    );\n}\n\nexport default MyApp;"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AACpB;AACA;AACA;;;;;;;;;;;AAIA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACnC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IAEvB,+CAA+C;IAC/C,MAAM,aAAa;QACf,MAAM,UAAU,SAAS,UAAU,SAAS;QAC5C,QAAQ;QACR,aAAa,OAAO,CAAC,QAAQ;IACjC;IAEA,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACN,gDAAgD;QAChD,MAAM,YAAY,aAAa,OAAO,CAAC;QACvC,IAAI,WAAW;YACX,QAAQ;QACZ,OAAO;YACH,MAAM,aAAa,OAAO,UAAU,CAAC,gCAAgC,OAAO,GAAG,SAAS;YACxF,QAAQ;YACR,aAAa,OAAO,CAAC,QAAQ;QACjC;QAEA,kCAAkC;QAClC,MAAM,aAAa,OAAO,UAAU,CAAC;QACrC,MAAM,eAAe,CAAC;YAClB,MAAM,aAAa,EAAE,OAAO,GAAG,SAAS;YACxC,IAAI,CAAC,aAAa,OAAO,CAAC,SAAS;gBAC/B,QAAQ;YACZ;QACJ;QACA,WAAW,gBAAgB,CAAC,UAAU;QAEtC,OAAO,IAAM,WAAW,mBAAmB,CAAC,UAAU;IAC1D,GAAG,EAAE;IAEL,qBACI,qKAAC;QAAI,WAAW,SAAS,SAAS,SAAS;;0BACvC,qKAAC;gBAAW,GAAG,SAAS;gBAAE,MAAM;gBAAM,YAAY;;;;;;0BAClD,qKAAC,kIAAA,CAAA,iBAAc;gBAAC,UAAS;gBAAY,OAAO,SAAS,SAAS,SAAS;;;;;;;;;;;;AAGnF;uCAEe"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/lib/supabase.js"],"sourcesContent":["// lib/supabase.js\nimport { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY; // Use anon key for client-side\n\nconsole.log(\"Supabase URL (client):\", supabaseUrl);\nconsole.log(\"Supabase Anon Key (client):\", supabaseKey);\n\nif (!supabaseUrl || !supabaseKey) {\n    throw new Error(\"Supabase configuration missing: Ensure NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY are set in .env.local\");\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseKey);"],"names":[],"mappings":"AAAA,kBAAkB;;;;AAClB;;AAEA,MAAM;AACN,MAAM,oQAAyD,+BAA+B;AAE9F,QAAQ,GAAG,CAAC,0BAA0B;AACtC,QAAQ,GAAG,CAAC,+BAA+B;AAE3C,uCAAkC;;AAElC;AAEO,MAAM,WAAW,CAAA,GAAA,iJAAA,CAAA,eAAY,AAAD,EAAE,aAAa"}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/src/layouts/hrSidebar.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport { ArrowRightStartOnRectangleIcon } from \"@heroicons/react/24/outline\";\nimport Image from \"next/image\";\nimport { useRouter } from \"next/router\";\nimport { Icon } from \"@iconify/react\";\n\nconst HRSidebar = ({ isOpen, mode, onLogout, toggleSidebar }) => {\n    const [windowWidth, setWindowWidth] = useState(null);\n    const router = useRouter();\n    const sidebarRef = useRef(null);\n\n    // Ensure windowWidth is updated only on the client\n    useEffect(() => {\n        const handleResize = () => setWindowWidth(window.innerWidth);\n        handleResize(); // Set windowWidth on mount\n        window.addEventListener(\"resize\", handleResize);\n\n        return () => {\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    }, []);\n\n    // Check if windowWidth is set before rendering\n    if (windowWidth === null) return null; // Prevent rendering until windowWidth is initialized\n\n    const fullName = \"HR Admin\"; // Static for now\n\n    const isActive = (pathname) =>\n        router.pathname === pathname\n            ? mode === \"dark\"\n                ? \"bg-[#f05d23] text-white\"\n                : \"bg-[#f05d23] text-white\"\n            : mode === \"dark\"\n                ? \"text-white\"\n                : \"text-[#231812]\";\n\n    return (\n        <div\n            ref={sidebarRef}\n            className={`fixed left-0 top-0 z-50 h-full transition-all duration-300 ${\n                mode === \"dark\" ? \"text-white\" : \"text-[#231812]\"\n            }`}\n            style={{\n                width: isOpen ? \"300px\" : windowWidth < 640 ? \"0\" : \"80px\",\n                backgroundColor: mode === \"dark\" ? \"#4b5563\" : \"#e5e7eb\", // Gray shades\n            }}\n        >\n            <div className=\"flex flex-col h-full\">\n                {/* Logo */}\n                <div className={`flex flex-col items-center py-10 ${isOpen ? \"px-4\" : \"px-0\"}`}>\n                    {isOpen ? (\n                        <Image\n                            src={mode === \"dark\" ? \"/assets/images/logo-white.svg\" : \"/assets/images/logo.svg\"}\n                            alt=\"Growthpad Logo\"\n                            width={200}\n                            height={75}\n                        />\n                    ) : (\n                        <Image\n                            src={mode === \"dark\" ? \"/assets/images/logo-white.svg\" : \"/assets/images/logo.svg\"}\n                            alt=\"Growthpad Logo\"\n                            width={40}\n                            height={40}\n                        />\n                    )}\n                </div>\n\n                {/* Navigation */}\n                <ul className=\"flex-grow\">\n                    {[\n                        { href: \"/hr/overview\", icon: \"mdi:view-dashboard\", label: \"Overview\" },\n                        { href: \"/hr/jobs\", icon: \"mdi:briefcase\", label: \"Job Postings\" },\n                        { href: \"/hr/applicants\", icon: \"mdi:account-group\", label: \"Applicants\" },\n                        { href: \"/hr/analytics\", icon: \"mdi:chart-bar\", label: \"Analytics\" },\n                        { href: \"/hr/settings\", icon: \"mdi:cog\", label: \"Settings\" },\n                    ].map(({ href, icon, label }) => (\n                        <li key={href} className=\"py-2\">\n                            <button\n                                onClick={() => router.push(href)}\n                                className={`flex items-center font-normal ${isOpen ? \"justify-start px-8\" : \"justify-center px-0\"} py-2 hover:bg-[#f05d23] hover:text-white transition duration-300 group relative ${isActive(href)}`}\n                            >\n                                <Icon\n                                    icon={icon}\n                                    className={`${isOpen ? \"h-8 w-8 mr-2\" : \"h-6 w-6\"} transition`}\n                                />\n                                {isOpen && <span>{label}</span>}\n                                {!isOpen && (\n                                    <span className=\"absolute left-full ml-2 text-xs text-white bg-gray-700 rounded py-1 px-2 opacity-0 group-hover:opacity-75 transition-opacity whitespace-nowrap\">\n                                        {label}\n                                    </span>\n                                )}\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n\n                {/* Logout */}\n                {(!isOpen && windowWidth < 640) ? null : (\n                    <div\n                        className={`flex items-center justify-between px-4 py-4 mt-auto rounded-2xl ${\n                            mode === \"dark\" ? \"bg-[#374151]\" : \"bg-[#d1d5db]\"\n                        }`}\n                    >\n                        {isOpen ? (\n                            <div className=\"flex items-center justify-between w-full\">\n                                <div className=\"flex items-center space-x-4\">\n                                    <div className=\"w-10 h-10 rounded-full overflow-hidden\">\n                                        <Image\n                                            src=\"/assets/images/placeholder.png\"\n                                            alt=\"Profile\"\n                                            width={40}\n                                            height={40}\n                                            className=\"object-cover\"\n                                        />\n                                    </div>\n                                    <span className=\"text-md\">{fullName}</span>\n                                </div>\n                                <button\n                                    onClick={onLogout}\n                                    className=\"flex items-center justify-center text-red-500 hover:text-red-600\"\n                                    aria-label=\"Logout\"\n                                >\n                                    <ArrowRightStartOnRectangleIcon className=\"h-8 w-8\" />\n                                </button>\n                            </div>\n                        ) : (\n                            <div className=\"flex items-center justify-center w-full relative group\">\n                                <button\n                                    onClick={onLogout}\n                                    className=\"flex items-center justify-center text-red-500 hover:text-red-600\"\n                                    aria-label=\"Logout\"\n                                >\n                                    <ArrowRightStartOnRectangleIcon className=\"h-6 w-6\" />\n                                </button>\n                                <span className=\"absolute left-full ml-2 text-xs text-white bg-gray-700 rounded py-1 px-2 opacity-0 group-hover:opacity-75 transition-opacity whitespace-nowrap\">\n                                    Sign Out\n                                </span>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default HRSidebar;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 583, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 600, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/src/layouts/hrHeader.js"],"sourcesContent":["// src/layouts/hrHeader.js\nimport { useState, useEffect, useRef } from \"react\";\nimport { MoonIcon, SunIcon, ArrowRightStartOnRectangleIcon } from \"@heroicons/react/24/outline\";\nimport Image from \"next/image\";\nimport { Icon } from \"@iconify/react\";\nimport {Bars3Icon, XMarkIcon} from \"@heroicons/react/16/solid\";\n\nconst HRHeader = ({ mode, toggleSidebar, toggleMode, isSidebarOpen, onLogout }) => {\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const dropdownRef = useRef(null);\n\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n                setDropdownOpen(false);\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n    }, []);\n\n    const fullName = \"HR Admin\"; // Static for now; integrate user data later\n\n    return (\n        <header\n            className={`relative top-0 left-0 right-0 z-50 transition-all duration-300 shadow-sm border-b ${\n                mode === 'dark' ? 'border-[#8DC63F] bg-[#0a0c1d] text-white' : 'border-gray-300 bg-[#ececec] text-black'\n            } ${isSidebarOpen ? 'md:ml-[300px]' : 'md:ml-[80px]'} backdrop-blur-md bg-opacity-30`}\n        >\n            <div className=\"flex items-center justify-between p-2 md:p-4\">\n                {/* Left Section: Logo */}\n                <div className=\"flex items-center space-x-2\">\n\n                    <button\n                        onClick={toggleSidebar}\n                        className=\"p-2 focus:outline-none\"\n                        aria-label=\"Toggle sidebar\"\n                    >\n                        {isSidebarOpen ? <XMarkIcon className=\"h-6 w-6\"/> : <Bars3Icon className=\"h-6 w-6\"/>}\n                    </button>\n                    <h1 className=\"text-2xl font-bold\">HR Dashboard</h1>\n                </div>\n\n                {/* Right Section: Dark Mode, User */}\n                <div className=\"flex items-center space-x-2\">\n                    {/* Dark Mode Toggle (Mobile) */}\n                    <button\n                        onClick={toggleMode}\n                        className=\"p-2 focus:outline-none md:hidden\"\n                        aria-label=\"Toggle dark mode\"\n                    >\n                        {mode === \"dark\" ? <SunIcon className=\"h-6 w-6\"/> : <MoonIcon className=\"h-6 w-6\"/>}\n                    </button>\n                    {/* Dark Mode Toggle (Desktop) */}\n                    <label className=\"hidden md:inline-flex items-center cursor-pointer\">\n                        <input type=\"checkbox\" checked={mode === \"dark\"} onChange={toggleMode} className=\"hidden\"/>\n                        <div\n                            className={`relative w-14 h-8 rounded-full border-2 flex items-center ${\n                                mode === \"dark\" ? \"border-blue-600 bg-blue-600\" : \"border-gray-300 bg-gray-300\"\n                            } transition`}\n                        >\n                            <div\n                                className={`absolute w-6 h-6 rounded-full bg-white flex items-center justify-center transition-transform ${\n                                    mode === \"dark\" ? \"translate-x-6\" : \"\"\n                                }`}\n                            >\n                                {mode === \"dark\" ? (\n                                    <Icon icon=\"bi:moon\" className=\"h-4 w-4 text-gray-700\"/>\n                                ) : (\n                                    <Icon icon=\"bi:sun\" className=\"h-4 w-4 text-yellow-500\"/>\n                                )}\n                            </div>\n                        </div>\n                    </label>\n\n                    {/* User Dropdown */}\n                    <div\n                        className=\"flex items-center gap-2 relative group cursor-default\"\n                        ref={dropdownRef}\n                        onClick={() => setDropdownOpen(!dropdownOpen)}\n                    >\n                        <div className=\"flex items-center gap-2 cursor-pointer\">\n                            <div className=\"w-10 h-10 rounded-full overflow-hidden\">\n                                <Image\n                                    src=\"/assets/images/placeholder.png\" // Placeholder, update with user profile later\n                                    alt=\"User Profile\"\n                                    width={40}\n                                    height={40}\n                                    className=\"object-cover\"\n                                />\n                            </div>\n                            <div className=\"hidden md:block\">\n                                <span\n                                    className={`font-bold ${\n                                        mode === \"dark\" ? \"text-white\" : \"text-[#231812]\"\n                                    }`}\n                                >\n                                    {fullName}\n                                </span>\n                                <span\n                                    className={`block text-sm font-normal ${\n                                        mode === \"dark\" ? \"text-[#f05d23]\" : \"text-[#f05d23]\"\n                                    }`}\n                                >\n                                    HR Team\n                                </span>\n                            </div>\n                            <Icon\n                                icon={dropdownOpen ? \"bxs:up-arrow\" : \"bxs:down-arrow\"}\n                                className={`h-5 w-5 font-bold transform transition-transform duration-300 ${\n                                    mode === \"dark\" ? \"text-white\" : \"text-[#231812]\"\n                                }`}\n                            />\n                        </div>\n\n                        {dropdownOpen && (\n                            <div\n                                className={`absolute top-full mt-2 right-0 w-80 rounded-2xl shadow-lg z-10 ${\n                                    mode === \"dark\" ? \"bg-gray-800 text-white\" : \"bg-white text-[#231812]\"\n                                }`}\n                            >\n                                <div className=\"p-8\">\n                                    <p className=\"text-lg mb-6\">User Profile</p>\n                                    <div className=\"flex items-center gap-2 border-b pb-6 w-full\">\n                                        <div className=\"rounded-full overflow-hidden flex-shrink-0\">\n                                            <Image\n                                                src=\"/assets/images/placeholder.png\"\n                                                alt=\"User Profile\"\n                                                width={40}\n                                                height={40}\n                                                className=\"object-cover\"\n                                            />\n                                        </div>\n                                        <div className=\"flex flex-col\">\n                                            <span className=\"text-md font-bold\">{fullName}</span>\n                                            <span className=\"text-sm\">HR Team</span>\n                                        </div>\n                                    </div>\n                                    <button\n                                        onClick={onLogout}\n                                        className=\"block w-full text-center text-white px-4 py-2 bg-[#f05d23] rounded-full hover:bg-[#d94f1e] transition duration-200 mt-4\"\n                                    >\n                                        Logout\n                                    </button>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default HRHeader;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 928, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 973, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/src/pages/hr/interview-questions.js"],"sourcesContent":["// src/pages/hr/interview-questions.js\nimport { useState, useEffect } from \"react\";\nimport { supabase } from \"lib/supabase\";\nimport HRSidebar from \"@/layouts/hrSidebar\";\nimport HRHeader from \"@/layouts/hrHeader\";\nimport { Toaster, toast } from \"react-hot-toast\";\nimport { Icon } from \"@iconify/react\";\nimport { EditorContent, useEditor } from \"@tiptap/react\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport { draggable, dropTargetForExternal } from \"@atlaskit/pragmatic-drag-and-drop\";\nimport { externalDragDrop } from \"@atlaskit/pragmatic-drag-and-drop-react-adapter\";\n\nexport default function HRInterviewQuestions({ mode = \"light\", toggleMode }) {\n    const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n    const [questions, setQuestions] = useState([]);\n    const [isAdding, setIsAdding] = useState(false);\n    const [newQuestionText, setNewQuestionText] = useState(\"\");\n    const [newOptions, setNewOptions] = useState(\"\");\n    const [newPoints, setNewPoints] = useState(\"\");\n    const [editingQuestion, setEditingQuestion] = useState(null);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [sortField, setSortField] = useState(\"order\");\n    const [sortDirection, setSortDirection] = useState(\"asc\");\n    const [filterPoints, setFilterPoints] = useState(\"all\");\n\n    const editor = useEditor({\n        extensions: [StarterKit],\n        content: newQuestionText,\n        onUpdate: ({ editor }) => setNewQuestionText(editor.getHTML()),\n        editorProps: {\n            attributes: {\n                class: `prose max-w-none p-4 border rounded-b-lg focus:outline-none focus:ring-2 focus:ring-[#f05d23] min-h-[100px] ${\n                    mode === \"dark\" ? \"bg-gray-700 border-gray-600 text-white\" : \"bg-white border-gray-300 text-[#231812]\"\n                }`,\n            },\n        },\n    });\n\n    useEffect(() => {\n        fetchQuestions();\n    }, [sortField, sortDirection]);\n\n    const fetchQuestions = async () => {\n        const { data, error } = await supabase\n            .from(\"interview_questions\")\n            .select(\"*\")\n            .order(sortField, { ascending: sortDirection === \"asc\" });\n        if (error) {\n            console.error(\"Error fetching questions:\", error);\n            toast.error(\"Failed to load questions.\");\n        } else {\n            setQuestions(data);\n        }\n    };\n\n    const handleAddQuestion = async (e) => {\n        e.preventDefault();\n        const optionsArray = newOptions.split(\",\").map((opt) => opt.trim()).filter((opt) => opt);\n        let pointsObject = {};\n        try {\n            pointsObject = newPoints ? JSON.parse(newPoints) : {};\n        } catch (error) {\n            toast.error(\"Invalid points format. Use JSON like: {\\\"Yes\\\": 10, \\\"No\\\": 0}\");\n            return;\n        }\n\n        if (!newQuestionText || optionsArray.length === 0) {\n            toast.error(\"Please provide a question and at least one option.\");\n            return;\n        }\n\n        const { data, error } = await supabase\n            .from(\"interview_questions\")\n            .insert([\n                {\n                    text: newQuestionText,\n                    options: optionsArray,\n                    points: pointsObject,\n                    order: questions.length,\n                },\n            ])\n            .select();\n\n        if (error) {\n            console.error(\"Error adding question:\", error);\n            toast.error(\"Failed to add question: \" + error.message);\n        } else {\n            toast.success(`Question \"${data[0].text}\" added successfully!`, { icon: \"✅\" });\n            setNewQuestionText(\"\");\n            setNewOptions(\"\");\n            setNewPoints(\"\");\n            editor?.commands.setContent(\"\");\n            setIsAdding(false);\n            fetchQuestions();\n        }\n    };\n\n    const handleEditQuestion = async (e) => {\n        e.preventDefault();\n        const optionsArray = newOptions.split(\",\").map((opt) => opt.trim()).filter((opt) => opt);\n        let pointsObject = {};\n        try {\n            pointsObject = newPoints ? JSON.parse(newPoints) : {};\n        } catch (error) {\n            toast.error(\"Invalid points format. Use JSON like: {\\\"Yes\\\": 10, \\\"No\\\": 0}\");\n            return;\n        }\n\n        if (!newQuestionText || optionsArray.length === 0) {\n            toast.error(\"Please provide a question and at least one option.\");\n            return;\n        }\n\n        const { data, error } = await supabase\n            .from(\"interview_questions\")\n            .update({\n                text: newQuestionText,\n                options: optionsArray,\n                points: pointsObject,\n                updated_at: new Date().toISOString(),\n            })\n            .eq(\"id\", editingQuestion.id)\n            .select();\n\n        if (error) {\n            console.error(\"Error editing question:\", error);\n            toast.error(\"Failed to update question: \" + error.message);\n        } else {\n            toast.success(`Question \"${data[0].text}\" updated successfully!`, { icon: \"✅\" });\n            setEditingQuestion(null);\n            setNewQuestionText(\"\");\n            setNewOptions(\"\");\n            setNewPoints(\"\");\n            editor?.commands.setContent(\"\");\n            fetchQuestions();\n        }\n    };\n\n    const handleDeleteQuestion = async (id, text) => {\n        const { error } = await supabase.from(\"interview_questions\").delete().eq(\"id\", id);\n        if (error) {\n            console.error(\"Error deleting question:\", error);\n            toast.error(\"Failed to delete question: \" + error.message);\n        } else {\n            toast.success(`Question \"${text}\" deleted successfully!`, { icon: \"🗑️\" });\n            fetchQuestions();\n        }\n    };\n\n    const handleDragStart = (e, questionId) => {\n        e.dataTransfer.setData(\"questionId\", questionId);\n    };\n\n    const handleDragOver = (e) => {\n        e.preventDefault();\n    };\n\n    const handleDrop = async (e, dropIndex) => {\n        e.preventDefault();\n        const draggedId = parseInt(e.dataTransfer.getData(\"questionId\"));\n        const draggedQuestion = questions.find((q) => q.id === draggedId);\n        if (!draggedQuestion) return;\n\n        const reorderedQuestions = Array.from(questions);\n        const draggedIndex = reorderedQuestions.findIndex((q) => q.id === draggedId);\n        reorderedQuestions.splice(draggedIndex, 1);\n        reorderedQuestions.splice(dropIndex, 0, draggedQuestion);\n\n        const updatedQuestions = reorderedQuestions.map((q, idx) => ({ ...q, order: idx }));\n        setQuestions(updatedQuestions);\n\n        const updates = updatedQuestions.map((q) => ({\n            id: q.id,\n            order: q.order,\n        }));\n\n        const { error } = await supabase.from(\"interview_questions\").upsert(updates);\n        if (error) {\n            console.error(\"Error reordering questions:\", error);\n            toast.error(\"Failed to reorder questions: \" + error.message);\n            fetchQuestions();\n        } else {\n            toast.success(\"Questions reordered successfully!\", { icon: \"↕️\" });\n        }\n    };\n\n    const handleSort = (field) => {\n        if (sortField === field) {\n            setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n        } else {\n            setSortField(field);\n            setSortDirection(\"asc\");\n        }\n    };\n\n    const filteredQuestions = questions\n        .filter((q) => q.text.toLowerCase().includes(searchQuery.toLowerCase()))\n        .filter((q) => {\n            if (filterPoints === \"hasPoints\") return q.points && Object.keys(q.points).length > 0;\n            if (filterPoints === \"noPoints\") return !q.points || Object.keys(q.points).length === 0;\n            return true;\n        });\n\n    const startEditing = (question) => {\n        setEditingQuestion(question);\n        setNewQuestionText(question.text);\n        setNewOptions(question.options.join(\", \"));\n        setNewPoints(question.points ? JSON.stringify(question.points) : \"\");\n        editor?.commands.setContent(question.text);\n    };\n\n    return (\n        <div\n            className={`min-h-screen flex flex-col ${\n                mode === \"dark\" ? \"bg-gradient-to-b from-gray-900 to-gray-800\" : \"bg-gradient-to-b from-gray-50 to-gray-100\"\n            }`}\n        >\n            <Toaster position=\"top-right\" reverseOrder={false} />\n            <HRHeader mode={mode} toggleMode={toggleMode} onLogout={handleLogout} />\n            <div className=\"flex flex-1\">\n                <HRSidebar\n                    isOpen={isSidebarOpen}\n                    mode={mode}\n                    onLogout={handleLogout}\n                    toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)}\n                />\n                <div\n                    className={`flex-1 p-6 transition-all duration-300 ${\n                        isSidebarOpen ? \"md:ml-[300px]\" : \"md:ml-[80px]\"\n                    }`}\n                >\n                    <div className=\"max-w-5xl mx-auto\">\n                        <div className=\"flex justify-between items-center mb-6\">\n                            <div className=\"flex items-center gap-2\">\n                                <Icon icon=\"mdi:comment-question-outline\" className=\"w-6 h-6 text-[#f05d23]\" />\n                                <h3 className={`text-xl font-bold ${mode === \"dark\" ? \"text-white\" : \"text-[#231812]\"}`}>\n                                    Interview Questions\n                                </h3>\n                            </div>\n                            <button\n                                onClick={() => setIsAdding(true)}\n                                className=\"px-4 py-2 bg-[#f05d23] text-white rounded-lg hover:bg-[#d94f1e] flex items-center gap-2 transition duration-200 shadow-md\"\n                            >\n                                <Icon icon=\"mdi:plus\" width={20} height={20} />\n                                Add Question\n                            </button>\n                        </div>\n\n                        {/* Add/Edit Form */}\n                        {(isAdding || editingQuestion) && (\n                            <div\n                                className={`p-6 rounded-lg shadow-lg mb-8 border-t-4 border-[#f05d23] ${\n                                    mode === \"dark\" ? \"bg-gray-800\" : \"bg-white\"\n                                }`}\n                            >\n                                <h4 className={`text-lg font-semibold mb-4 ${mode === \"dark\" ? \"text-white\" : \"text-[#231812]\"}`}>\n                                    {editingQuestion ? \"Edit Question\" : \"Add New Question\"}\n                                </h4>\n                                <form onSubmit={editingQuestion ? handleEditQuestion : handleAddQuestion} className=\"space-y-6\">\n                                    <div>\n                                        <label\n                                            className={`block text-sm font-medium mb-2 ${\n                                                mode === \"dark\" ? \"text-gray-300\" : \"text-[#231812]\"\n                                            }`}\n                                        >\n                                            Question Text <span className=\"text-red-500\">*</span>\n                                        </label>\n                                        <div\n                                            className={`border rounded-lg overflow-hidden ${\n                                                mode === \"dark\" ? \"border-gray-600\" : \"border-gray-300\"\n                                            }`}\n                                        >\n                                            <EditorContent editor={editor} />\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <label\n                                            className={`block text-sm font-medium mb-2 ${\n                                                mode === \"dark\" ? \"text-gray-300\" : \"text-[#231812]\"\n                                            }`}\n                                        >\n                                            Options (comma-separated) <span className=\"text-red-500\">*</span>\n                                        </label>\n                                        <input\n                                            type=\"text\"\n                                            value={newOptions}\n                                            onChange={(e) => setNewOptions(e.target.value)}\n                                            className={`w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#f05d23] transition duration-200 ${\n                                                mode === \"dark\"\n                                                    ? \"bg-gray-700 border-gray-600 text-white\"\n                                                    : \"bg-gray-50 border-gray-300 text-[#231812]\"\n                                            }`}\n                                            placeholder=\"e.g., Yes, No\"\n                                            required\n                                        />\n                                    </div>\n                                    <div>\n                                        <label\n                                            className={`block text-sm font-medium mb-2 ${\n                                                mode === \"dark\" ? \"text-gray-300\" : \"text-[#231812]\"\n                                            }`}\n                                        >\n                                            Points (JSON, optional) <span className=\"text-gray-500\">e.g., {\"{\\\"Yes\\\": 10, \\\"No\\\": 0}\"}</span>\n                                        </label>\n                                        <input\n                                            type=\"text\"\n                                            value={newPoints}\n                                            onChange={(e) => setNewPoints(e.target.value)}\n                                            className={`w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#f05d23] transition duration-200 ${\n                                                mode === \"dark\"\n                                                    ? \"bg-gray-700 border-gray-600 text-white\"\n                                                    : \"bg-gray-50 border-gray-300 text-[#231812]\"\n                                            }`}\n                                            placeholder='e.g., {\"Yes\": 10, \"No\": 0}'\n                                        />\n                                    </div>\n                                    <div className=\"flex gap-4\">\n                                        <button\n                                            type=\"submit\"\n                                            className=\"flex-1 py-2 bg-[#f05d23] text-white rounded-lg hover:bg-[#d94f1e] transition duration-200 shadow-md flex items-center justify-center gap-2\"\n                                        >\n                                            <Icon icon={editingQuestion ? \"mdi:pencil\" : \"mdi:plus\"} width={20} height={20} />\n                                            {editingQuestion ? \"Update Question\" : \"Add Question\"}\n                                        </button>\n                                        <button\n                                            type=\"button\"\n                                            onClick={() => {\n                                                setIsAdding(false);\n                                                setEditingQuestion(null);\n                                                setNewQuestionText(\"\");\n                                                setNewOptions(\"\");\n                                                setNewPoints(\"\");\n                                                editor?.commands.setContent(\"\");\n                                            }}\n                                            className=\"flex-1 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition duration-200 shadow-md flex items-center justify-center gap-2\"\n                                        >\n                                            <Icon icon=\"mdi:close\" width={20} height={20} />\n                                            Cancel\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>\n                        )}\n\n                        {/* Search and Filter */}\n                        <div className=\"mb-6 flex flex-col md:flex-row gap-4\">\n                            <div className=\"flex-1 relative\">\n                                <Icon\n                                    icon=\"mdi:magnify\"\n                                    className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-[#f05d23]\"\n                                />\n                                <input\n                                    type=\"text\"\n                                    value={searchQuery}\n                                    onChange={(e) => setSearchQuery(e.target.value)}\n                                    className={`w-full pl-10 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#f05d23] transition duration-200 ${\n                                        mode === \"dark\"\n                                            ? \"bg-gray-700 border-gray-600 text-white\"\n                                            : \"bg-gray-50 border-gray-300 text-[#231812]\"\n                                    }`}\n                                    placeholder=\"Search questions...\"\n                                />\n                            </div>\n                            <div className=\"flex items-center gap-2\">\n                                <label\n                                    className={`text-sm font-medium ${\n                                        mode === \"dark\" ? \"text-gray-300\" : \"text-[#231812]\"\n                                    }`}\n                                >\n                                    Filter by Points:\n                                </label>\n                                <select\n                                    value={filterPoints}\n                                    onChange={(e) => setFilterPoints(e.target.value)}\n                                    className={`p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#f05d23] transition duration-200 ${\n                                        mode === \"dark\"\n                                            ? \"bg-gray-700 border-gray-600 text-white\"\n                                            : \"bg-gray-50 border-gray-300 text-[#231812]\"\n                                    }`}\n                                >\n                                    <option value=\"all\">All</option>\n                                    <option value=\"hasPoints\">Has Points</option>\n                                    <option value=\"noPoints\">No Points</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        {/* Questions Table */}\n                        <div\n                            className={`rounded-lg shadow-lg overflow-hidden ${\n                                mode === \"dark\" ? \"bg-gray-800\" : \"bg-white\"\n                            }`}\n                        >\n                            <div className=\"max-h-[500px] overflow-y-auto\">\n                                <table className=\"w-full\">\n                                    <thead className=\"sticky top-0 z-10\">\n                                    <tr className={`${mode === \"dark\" ? \"bg-gray-700\" : \"bg-gray-100\"}`}>\n                                        <th className=\"p-4 w-12\"></th>\n                                        <th\n                                            className=\"p-4 text-left text-sm font-semibold cursor-pointer\"\n                                            onClick={() => handleSort(\"id\")}\n                                        >\n                                            ID{\" \"}\n                                            {sortField === \"id\" && (\n                                                <Icon\n                                                    icon={sortDirection === \"asc\" ? \"mdi:arrow-up\" : \"mdi:arrow-down\"}\n                                                    width={16}\n                                                    height={16}\n                                                    className=\"inline\"\n                                                />\n                                            )}\n                                        </th>\n                                        <th\n                                            className=\"p-4 text-left text-sm font-semibold cursor-pointer\"\n                                            onClick={() => handleSort(\"text\")}\n                                        >\n                                            Question{\" \"}\n                                            {sortField === \"text\" && (\n                                                <Icon\n                                                    icon={sortDirection === \"asc\" ? \"mdi:arrow-up\" : \"mdi:arrow-down\"}\n                                                    width={16}\n                                                    height={16}\n                                                    className=\"inline\"\n                                                />\n                                            )}\n                                        </th>\n                                        <th className=\"p-4 text-left text-sm font-semibold\">Options</th>\n                                        <th className=\"p-4 text-left text-sm font-semibold\">Points</th>\n                                        <th className=\"p-4 text-left text-sm font-semibold\">Actions</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {filteredQuestions.map((question, index) => (\n                                        <tr\n                                            key={question.id}\n                                            draggable\n                                            onDragStart={(e) => handleDragStart(e, question.id)}\n                                            onDragOver={handleDragOver}\n                                            onDrop={(e) => handleDrop(e, index)}\n                                            className={`border-b hover:bg-opacity-80 transition duration-200 cursor-move ${\n                                                mode === \"dark\"\n                                                    ? \"border-gray-700 hover:bg-gray-700\"\n                                                    : \"border-gray-200 hover:bg-gray-50\"\n                                            }`}\n                                        >\n                                            <td className=\"p-4 w-12\">\n                                                <Icon\n                                                    icon=\"mdi:drag\"\n                                                    width={20}\n                                                    height={20}\n                                                    className=\"text-gray-500\"\n                                                />\n                                            </td>\n                                            <td className=\"p-4 text-sm\">{question.id}</td>\n                                            <td className=\"p-4 text-sm\">\n                                                <div\n                                                    className=\"prose max-w-none line-clamp-2\"\n                                                    dangerouslySetInnerHTML={{ __html: question.text }}\n                                                />\n                                            </td>\n                                            <td className=\"p-4 text-sm\">{question.options.join(\", \")}</td>\n                                            <td className=\"p-4 text-sm\">\n                                                {question.points ? JSON.stringify(question.points) : \"None\"}\n                                            </td>\n                                            <td className=\"p-4 text-sm flex gap-2\">\n                                                <button\n                                                    onClick={() => startEditing(question)}\n                                                    className=\"px-3 py-1 bg-[#f05d23] text-white rounded-lg hover:bg-[#d94f1e] transition duration-200 flex items-center gap-2\"\n                                                >\n                                                    <Icon icon=\"mdi:pencil\" width={16} height={16} />\n                                                    Edit\n                                                </button>\n                                                <button\n                                                    onClick={() => handleDeleteQuestion(question.id, question.text)}\n                                                    className=\"px-3 py-1 bg-red-500 text-white rounded-lg hover:bg-red-600 transition duration-200 flex items-center gap-2\"\n                                                >\n                                                    <Icon icon=\"mdi:trash-can\" width={16} height={16} />\n                                                    Delete\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                    </tbody>\n                                </table>\n                                {filteredQuestions.length === 0 && (\n                                    <p\n                                        className={`text-center p-4 italic ${\n                                            mode === \"dark\" ? \"text-gray-400\" : \"text-gray-500\"\n                                        }`}\n                                    >\n                                        No questions match your search or filter.\n                                    </p>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <footer\n                className={`p-4 text-center text-sm shadow-inner ${\n                    mode === \"dark\" ? \"bg-gray-900 text-gray-400\" : \"bg-white text-gray-500\"\n                }`}\n            >\n                © {new Date().getFullYear()} Growthpad Consulting Group. All rights reserved.\n            </footer>\n        </div>\n    );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1861, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}