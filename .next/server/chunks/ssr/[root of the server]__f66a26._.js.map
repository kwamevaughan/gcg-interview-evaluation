{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/src/pages/_document.js"],"sourcesContent":["import Document, { Html, Head, Main, NextScript } from 'next/document';\n\nclass MyDocument extends Document {\n    render() {\n        return (\n            <Html lang=\"en\">\n                <Head>\n                    {/* Add Google Fonts for Questrial */}\n                    <link\n                        href=\"https://fonts.googleapis.com/css2?family=Questrial&display=swap\"\n                        rel=\"stylesheet\"\n                    />\n                    {/* Favicon Links */}\n                    <link rel=\"icon\" href=\"/favicon.png\" />\n                    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\" />\n                    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\" />\n                    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\" />\n                    <title>GCG Personality Evaluation Test</title>\n                    {/* Google Tag Manager Script */}\n                </Head>\n                <body style={{ fontFamily: 'Questrial, sans-serif' }}>\n                {/* Google Tag Manager (noscript) */}\n                <Main />\n                <NextScript />\n                </body>\n            </Html>\n        );\n    }\n}\n\nexport default MyDocument;\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,mBAAmB,yHAAA,CAAA,UAAQ;IAC7B,SAAS;QACL,qBACI,qKAAC,yHAAA,CAAA,OAAI;YAAC,MAAK;;8BACP,qKAAC,yHAAA,CAAA,OAAI;;sCAED,qKAAC;4BACG,MAAK;4BACL,KAAI;;;;;;sCAGR,qKAAC;4BAAK,KAAI;4BAAO,MAAK;;;;;;sCACtB,qKAAC;4BAAK,KAAI;4BAAmB,OAAM;4BAAU,MAAK;;;;;;sCAClD,qKAAC;4BAAK,KAAI;4BAAO,MAAK;4BAAY,OAAM;4BAAQ,MAAK;;;;;;sCACrD,qKAAC;4BAAK,KAAI;4BAAO,MAAK;4BAAY,OAAM;4BAAQ,MAAK;;;;;;sCACrD,qKAAC;sCAAM;;;;;;;;;;;;8BAGX,qKAAC;oBAAK,OAAO;wBAAE,YAAY;oBAAwB;;sCAEnD,qKAAC,yHAAA,CAAA,OAAI;;;;;sCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;IAIvB;AACJ;uCAEe"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/src/pages/_app.js"],"sourcesContent":["// src/pages/_app.js\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../styles/globals.css\";\n\nfunction MyApp({ Component, pageProps }) {\n    const [mode, setMode] = useState(\"light\");\n    const router = useRouter();\n\n    // Toggle dark mode and persist in localStorage\n    const toggleMode = () => {\n        const newMode = mode === \"light\" ? \"dark\" : \"light\";\n        setMode(newMode);\n        localStorage.setItem(\"mode\", newMode);\n    };\n\n    useEffect(() => {\n        // Load saved mode or system preference on mount\n        const savedMode = localStorage.getItem(\"mode\");\n        if (savedMode) {\n            setMode(savedMode);\n        } else {\n            const systemMode = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n            setMode(systemMode);\n            localStorage.setItem(\"mode\", systemMode);\n        }\n\n        // Listen for system theme changes\n        const mediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n        const handleChange = (e) => {\n            const systemMode = e.matches ? \"dark\" : \"light\";\n            if (!localStorage.getItem(\"mode\")) {\n                setMode(systemMode);\n            }\n        };\n        mediaQuery.addEventListener(\"change\", handleChange);\n\n        return () => mediaQuery.removeEventListener(\"change\", handleChange);\n    }, []);\n\n    return (\n        <div className={mode === \"dark\" ? \"dark\" : \"\"}>\n            <Component {...pageProps} mode={mode} toggleMode={toggleMode} />\n            <ToastContainer position=\"top-right\" theme={mode === \"dark\" ? \"dark\" : \"light\"} />\n        </div>\n    );\n}\n\nexport default MyApp;"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AACpB;AACA;AACA;;;;;;;;;;;AAIA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACnC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IAEvB,+CAA+C;IAC/C,MAAM,aAAa;QACf,MAAM,UAAU,SAAS,UAAU,SAAS;QAC5C,QAAQ;QACR,aAAa,OAAO,CAAC,QAAQ;IACjC;IAEA,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACN,gDAAgD;QAChD,MAAM,YAAY,aAAa,OAAO,CAAC;QACvC,IAAI,WAAW;YACX,QAAQ;QACZ,OAAO;YACH,MAAM,aAAa,OAAO,UAAU,CAAC,gCAAgC,OAAO,GAAG,SAAS;YACxF,QAAQ;YACR,aAAa,OAAO,CAAC,QAAQ;QACjC;QAEA,kCAAkC;QAClC,MAAM,aAAa,OAAO,UAAU,CAAC;QACrC,MAAM,eAAe,CAAC;YAClB,MAAM,aAAa,EAAE,OAAO,GAAG,SAAS;YACxC,IAAI,CAAC,aAAa,OAAO,CAAC,SAAS;gBAC/B,QAAQ;YACZ;QACJ;QACA,WAAW,gBAAgB,CAAC,UAAU;QAEtC,OAAO,IAAM,WAAW,mBAAmB,CAAC,UAAU;IAC1D,GAAG,EAAE;IAEL,qBACI,qKAAC;QAAI,WAAW,SAAS,SAAS,SAAS;;0BACvC,qKAAC;gBAAW,GAAG,SAAS;gBAAE,MAAM;gBAAM,YAAY;;;;;;0BAClD,qKAAC,kIAAA,CAAA,iBAAc;gBAAC,UAAS;gBAAY,OAAO,SAAS,SAAS,SAAS;;;;;;;;;;;;AAGnF;uCAEe"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/lib/supabase.js"],"sourcesContent":["// lib/supabase.js\nimport { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY; // Use anon key for client-side\n\nconsole.log(\"Supabase URL (client):\", supabaseUrl);\nconsole.log(\"Supabase Anon Key (client):\", supabaseKey);\n\nif (!supabaseUrl || !supabaseKey) {\n    throw new Error(\"Supabase configuration missing: Ensure NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY are set in .env.local\");\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseKey);"],"names":[],"mappings":"AAAA,kBAAkB;;;;AAClB;;AAEA,MAAM;AACN,MAAM,oQAAyD,+BAA+B;AAE9F,QAAQ,GAAG,CAAC,0BAA0B;AACtC,QAAQ,GAAG,CAAC,+BAA+B;AAE3C,uCAAkC;;AAElC;AAEO,MAAM,WAAW,CAAA,GAAA,iJAAA,CAAA,eAAY,AAAD,EAAE,aAAa"}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/src/pages/hr/login.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { supabase } from \"../../../lib/supabase\"; // Use client-side supabase\nimport bcrypt from \"bcryptjs\";\n\nexport default function HRLogin() {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [captchaVerified, setCaptchaVerified] = useState(false);\n    const [error, setError] = useState(\"\");\n    const router = useRouter();\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        if (!captchaVerified) {\n            setError(\"Please verify the CAPTCHA.\");\n            return;\n        }\n\n        // Fetch user from hr_users table\n        const { data: user, error: fetchError } = await supabase\n            .from(\"hr_users\")\n            .select(\"username, password\")\n            .eq(\"username\", username)\n            .single();\n\n        if (fetchError || !user) {\n            setError(\"Invalid username or password.\");\n            return;\n        }\n\n        // Compare password\n        const passwordMatch = await bcrypt.compare(password, user.password);\n        if (!passwordMatch) {\n            setError(\"Invalid username or password.\");\n            return;\n        }\n\n        // Set session (localStorage for simplicity; upgrade to JWT later)\n        localStorage.setItem(\"hr_session\", \"authenticated\");\n        router.push(\"/hr/jobs\");\n    };\n\n    return (\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n            <form onSubmit={handleLogin} className=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full\">\n                <h2 className=\"text-2xl font-bold mb-6 text-center\">HR Login</h2>\n                {error && <p className=\"text-red-500 mb-4\">{error}</p>}\n                <div className=\"mb-4\">\n                    <label className=\"block text-sm font-medium mb-1\">Username</label>\n                    <input\n                        type=\"text\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        className=\"w-full p-2 border rounded-lg\"\n                        required\n                    />\n                </div>\n                <div className=\"mb-4\">\n                    <label className=\"block text-sm font-medium mb-1\">Password</label>\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        className=\"w-full p-2 border rounded-lg\"\n                        required\n                    />\n                </div>\n                <div className=\"mb-6\">\n                    <ReCAPTCHA\n                        sitekey={process.env.NEXT_PUBLIC_RECAPTCHA_SITE_KEY} // Access site key from .env.local\n                        onChange={() => setCaptchaVerified(true)}\n                    />\n                </div>\n                <button type=\"submit\" className=\"w-full p-2 bg-[#f05d23] text-white rounded-lg hover:bg-[#d94f1e]\">\n                    Login\n                </button>\n            </form>\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA,qLAAkD,2BAA2B;AAC7E;;;;;;;;;;;AAEe,SAAS;IACpB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,cAAc,OAAO;QACvB,EAAE,cAAc;QAChB,IAAI,CAAC,iBAAiB;YAClB,SAAS;YACT;QACJ;QAEA,iCAAiC;QACjC,MAAM,EAAE,MAAM,IAAI,EAAE,OAAO,UAAU,EAAE,GAAG,MAAM,wGAAA,CAAA,WAAQ,CACnD,IAAI,CAAC,YACL,MAAM,CAAC,sBACP,EAAE,CAAC,YAAY,UACf,MAAM;QAEX,IAAI,cAAc,CAAC,MAAM;YACrB,SAAS;YACT;QACJ;QAEA,mBAAmB;QACnB,MAAM,gBAAgB,MAAM,gHAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;QAClE,IAAI,CAAC,eAAe;YAChB,SAAS;YACT;QACJ;QAEA,kEAAkE;QAClE,aAAa,OAAO,CAAC,cAAc;QACnC,OAAO,IAAI,CAAC;IAChB;IAEA,qBACI,qKAAC;QAAI,WAAU;kBACX,cAAA,qKAAC;YAAK,UAAU;YAAa,WAAU;;8BACnC,qKAAC;oBAAG,WAAU;8BAAsC;;;;;;gBACnD,uBAAS,qKAAC;oBAAE,WAAU;8BAAqB;;;;;;8BAC5C,qKAAC;oBAAI,WAAU;;sCACX,qKAAC;4BAAM,WAAU;sCAAiC;;;;;;sCAClD,qKAAC;4BACG,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC3C,WAAU;4BACV,QAAQ;;;;;;;;;;;;8BAGhB,qKAAC;oBAAI,WAAU;;sCACX,qKAAC;4BAAM,WAAU;sCAAiC;;;;;;sCAClD,qKAAC;4BACG,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC3C,WAAU;4BACV,QAAQ;;;;;;;;;;;;8BAGhB,qKAAC;oBAAI,WAAU;8BACX,cAAA,qKAAC,iJAAA,CAAA,UAAS;wBACN,OAAO;wBACP,UAAU,IAAM,mBAAmB;;;;;;;;;;;8BAG3C,qKAAC;oBAAO,MAAK;oBAAS,WAAU;8BAAmE;;;;;;;;;;;;;;;;;AAMnH"}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}