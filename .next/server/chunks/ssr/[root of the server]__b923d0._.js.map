{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/src/components/QuestionForm.js"],"sourcesContent":["// src/components/QuestionForm.js\nimport { Icon } from \"@iconify/react\";\nimport { toast } from \"react-hot-toast\";\n\nexport default function QuestionForm({ mode, question, onSubmit, onCancel }) {\n    const [text, setText] = useState(question?.text || \"\");\n    const [options, setOptions] = useState(question?.options.join(\", \") || \"\");\n    const [optionPoints, setOptionPoints] = useState(question?.points || {});\n    const [isMultiSelect, setIsMultiSelect] = useState(\n        question?.points && \"base\" in question.points\n    );\n    const [basePoints, setBasePoints] = useState(\n        question?.points && \"base\" in question.points ? question.points.base : 5\n    );\n    const [extraPoints, setExtraPoints] = useState(\n        question?.points && \"extra\" in question.points ? question.points.extra : 2\n    );\n    const [maxPoints, setMaxPoints] = useState(\n        question?.points && \"max\" in question.points ? question.points.max : 10\n    );\n\n    const handleOptionChange = (e) => {\n        setOptions(e.target.value);\n        const optionsArray = e.target.value.split(\",\").map((opt) => opt.trim()).filter((opt) => opt);\n        const updatedPoints = {};\n        optionsArray.forEach((opt) => {\n            updatedPoints[opt] = optionPoints[opt] || 0;\n        });\n        setOptionPoints(updatedPoints);\n    };\n\n    const handlePointChange = (option, value) => {\n        setOptionPoints((prev) => ({\n            ...prev,\n            [option]: value,\n        }));\n    };\n\n    const handleFormSubmit = async (e) => {\n        e.preventDefault();\n        const optionsArray = options.split(\",\").map((opt) => opt.trim()).filter((opt) => opt);\n        let pointsData = {};\n        if (isMultiSelect) {\n            pointsData = { base: basePoints, extra: extraPoints, max: maxPoints };\n        } else {\n            pointsData = optionsArray.reduce((acc, opt) => {\n                acc[opt] = parseInt(optionPoints[opt]) || 0;\n                return acc;\n            }, {});\n        }\n\n        if (!text || optionsArray.length === 0) {\n            toast.error(\"Please provide a question and at least one option.\");\n            return;\n        }\n\n        const success = await onSubmit(text, options, JSON.stringify(pointsData));\n        if (success) {\n            onCancel();\n        }\n    };\n\n    const optionsArray = options.split(\",\").map((opt) => opt.trim()).filter((opt) => opt);\n\n    return (\n        <div\n            className={`p-6 rounded-lg shadow-lg mb-8 border-t-4 border-[#f05d23] ${\n                mode === \"dark\" ? \"bg-gray-800\" : \"bg-white\"\n            }`}\n        >\n            <h4\n                className={`text-lg font-semibold mb-4 ${mode === \"dark\" ? \"text-white\" : \"text-[#231812]\"}`}\n            >\n                {question ? \"Edit Question\" : \"Add New Question\"}\n            </h4>\n            <form onSubmit={handleFormSubmit} className=\"space-y-6\">\n                <div>\n                    <label\n                        className={`block text-sm font-medium mb-2 ${\n                            mode === \"dark\" ? \"text-gray-300\" : \"text-[#231812]\"\n                        }`}\n                    >\n                        Question Text <span className=\"text-red-500\">*</span>\n                    </label>\n                    <textarea\n                        value={text}\n                        onChange={(e) => setText(e.target.value)}\n                        className={`w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#f05d23] transition duration-200 min-h-[100px] ${\n                            mode === \"dark\"\n                                ? \"bg-gray-700 border-gray-600 text-white\"\n                                : \"bg-gray-50 border-gray-300 text-[#231812]\"\n                        }`}\n                        placeholder=\"Enter question text here...\"\n                        required\n                    />\n                </div>\n                <div>\n                    <label\n                        className={`block text-sm font-medium mb-2 ${\n                            mode === \"dark\" ? \"text-gray-300\" : \"text-[#231812]\"\n                        }`}\n                    >\n                        Options and Points <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        value={options}\n                        onChange={handleOptionChange}\n                        className={`w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#f05d23] transition duration-200 mb-4 ${\n                            mode === \"dark\"\n                                ? \"bg-gray-700 border-gray-600 text-white\"\n                                : \"bg-gray-50 border-gray-300 text-[#231812]\"\n                        }`}\n                        placeholder=\"e.g., Yes, No\"\n                        required\n                    />\n                    <div className=\"flex items-center gap-2 mb-4\">\n                        <input\n                            type=\"checkbox\"\n                            checked={isMultiSelect}\n                            onChange={(e) => setIsMultiSelect(e.target.checked)}\n                            className=\"form-checkbox h-5 w-5 text-[#f05d23]\"\n                        />\n                        <label\n                            className={`text-sm ${mode === \"dark\" ? \"text-gray-300\" : \"text-[#231812]\"}`}\n                        >\n                            Allow multiple selections\n                        </label>\n                    </div>\n                    {isMultiSelect ? (\n                        <div className=\"space-y-2\">\n                            <div className=\"flex items-center gap-4\">\n                                <label\n                                    className={`flex-1 ${mode === \"dark\" ? \"text-gray-300\" : \"text-[#231812]\"}`}\n                                >\n                                    Base Points (first selection)\n                                </label>\n                                <input\n                                    type=\"number\"\n                                    value={basePoints}\n                                    onChange={(e) => setBasePoints(parseInt(e.target.value) || 0)}\n                                    className={`w-20 p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#f05d23] transition duration-200 ${\n                                        mode === \"dark\"\n                                            ? \"bg-gray-700 border-gray-600 text-white\"\n                                            : \"bg-gray-50 border-gray-300 text-[#231812]\"\n                                    }`}\n                                    min=\"0\"\n                                />\n                            </div>\n                            <div className=\"flex items-center gap-4\">\n                                <label\n                                    className={`flex-1 ${mode === \"dark\" ? \"text-gray-300\" : \"text-[#231812]\"}`}\n                                >\n                                    Extra Points (per additional selection)\n                                </label>\n                                <input\n                                    type=\"number\"\n                                    value={extraPoints}\n                                    onChange={(e) => setExtraPoints(parseInt(e.target.value) || 0)}\n                                    className={`w-20 p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#f05d23] transition duration-200 ${\n                                        mode === \"dark\"\n                                            ? \"bg-gray-700 border-gray-600 text-white\"\n                                            : \"bg-gray-50 border-gray-300 text-[#231812]\"\n                                    }`}\n                                    min=\"0\"\n                                />\n                            </div>\n                            <div className=\"flex items-center gap-4\">\n                                <label\n                                    className={`flex-1 ${mode === \"dark\" ? \"text-gray-300\" : \"text-[#231812]\"}`}\n                                >\n                                    Max Points\n                                </label>\n                                <input\n                                    type=\"number\"\n                                    value={maxPoints}\n                                    onChange={(e) => setMaxPoints(parseInt(e.target.value) || 0)}\n                                    className={`w-20 p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#f05d23] transition duration-200 ${\n                                        mode === \"dark\"\n                                            ? \"bg-gray-700 border-gray-600 text-white\"\n                                            : \"bg-gray-50 border-gray-300 text-[#231812]\"\n                                    }`}\n                                    min=\"0\"\n                                />\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"space-y-2\">\n                            {optionsArray.map((option) => (\n                                <div key={option} className=\"flex items-center gap-4\">\n                                    <span\n                                        className={`flex-1 ${mode === \"dark\" ? \"text-gray-300\" : \"text-[#231812]\"}`}\n                                    >\n                                        {option}\n                                    </span>\n                                    <input\n                                        type=\"number\"\n                                        value={optionPoints[option] || \"\"}\n                                        onChange={(e) => handlePointChange(option, e.target.value)}\n                                        className={`w-20 p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#f05d23] transition duration-200 ${\n                                            mode === \"dark\"\n                                                ? \"bg-gray-700 border-gray-600 text-white\"\n                                                : \"bg-gray-50 border-gray-300 text-[#231812]\"\n                                        }`}\n                                        placeholder=\"0\"\n                                        min=\"0\"\n                                    />\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </div>\n                <div className=\"flex gap-4\">\n                    <button\n                        type=\"submit\"\n                        className=\"flex-1 py-2 bg-[#f05d23] text-white rounded-lg hover:bg-[#d94f1e] transition duration-200 shadow-md flex items-center justify-center gap-2\"\n                    >\n                        <Icon icon={question ? \"mdi:pencil\" : \"mdi:plus\"} width={20} height={20} />\n                        {question ? \"Update Question\" : \"Add Question\"}\n                    </button>\n                    <button\n                        type=\"button\"\n                        onClick={onCancel}\n                        className=\"flex-1 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition duration-200 shadow-md flex items-center justify-center gap-2\"\n                    >\n                        <Icon icon=\"mdi:close\" width={20} height={20} />\n                        Cancel\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}