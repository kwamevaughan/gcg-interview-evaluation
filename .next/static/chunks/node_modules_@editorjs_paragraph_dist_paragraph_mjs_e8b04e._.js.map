{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/Apple/Documents/Projects/Clients/GCC%20Internal%20Tools/gcg-interview-evaluation/node_modules/%40editorjs/paragraph/dist/paragraph.mjs"],"sourcesContent":["(function(){\"use strict\";try{if(typeof document<\"u\"){var e=document.createElement(\"style\");e.appendChild(document.createTextNode(\".ce-paragraph{line-height:1.6em;outline:none}.ce-block:only-of-type .ce-paragraph[data-placeholder-active]:empty:before,.ce-block:only-of-type .ce-paragraph[data-placeholder-active][data-empty=true]:before{content:attr(data-placeholder-active)}.ce-paragraph p:first-of-type{margin-top:0}.ce-paragraph p:last-of-type{margin-bottom:0}\")),document.head.appendChild(e)}}catch(a){console.error(\"vite-plugin-css-injected-by-js\",a)}})();\nconst a = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-width=\"2\" d=\"M8 9V7.2C8 7.08954 8.08954 7 8.2 7L12 7M16 9V7.2C16 7.08954 15.9105 7 15.8 7L12 7M12 7L12 17M12 17H10M12 17H14\"/></svg>';\nfunction l(r) {\n  const t = document.createElement(\"div\");\n  t.innerHTML = r.trim();\n  const e = document.createDocumentFragment();\n  return e.append(...Array.from(t.childNodes)), e;\n}\n/**\n * Base Paragraph Block for the Editor.js.\n * Represents a regular text block\n *\n * @author CodeX (team@codex.so)\n * @copyright CodeX 2018\n * @license The MIT License (MIT)\n */\nclass n {\n  /**\n   * Default placeholder for Paragraph Tool\n   *\n   * @returns {string}\n   * @class\n   */\n  static get DEFAULT_PLACEHOLDER() {\n    return \"\";\n  }\n  /**\n   * Render plugin`s main Element and fill it with saved data\n   *\n   * @param {object} params - constructor params\n   * @param {ParagraphData} params.data - previously saved data\n   * @param {ParagraphConfig} params.config - user config for Tool\n   * @param {object} params.api - editor.js api\n   * @param {boolean} readOnly - read only mode flag\n   */\n  constructor({ data: t, config: e, api: i, readOnly: s }) {\n    this.api = i, this.readOnly = s, this._CSS = {\n      block: this.api.styles.block,\n      wrapper: \"ce-paragraph\"\n    }, this.readOnly || (this.onKeyUp = this.onKeyUp.bind(this)), this._placeholder = e.placeholder ? e.placeholder : n.DEFAULT_PLACEHOLDER, this._data = t ?? {}, this._element = null, this._preserveBlank = e.preserveBlank ?? !1;\n  }\n  /**\n   * Check if text content is empty and set empty string to inner html.\n   * We need this because some browsers (e.g. Safari) insert <br> into empty contenteditanle elements\n   *\n   * @param {KeyboardEvent} e - key up event\n   */\n  onKeyUp(t) {\n    if (t.code !== \"Backspace\" && t.code !== \"Delete\" || !this._element)\n      return;\n    const { textContent: e } = this._element;\n    e === \"\" && (this._element.innerHTML = \"\");\n  }\n  /**\n   * Create Tool's view\n   *\n   * @returns {HTMLDivElement}\n   * @private\n   */\n  drawView() {\n    const t = document.createElement(\"DIV\");\n    return t.classList.add(this._CSS.wrapper, this._CSS.block), t.contentEditable = \"false\", t.dataset.placeholderActive = this.api.i18n.t(this._placeholder), this._data.text && (t.innerHTML = this._data.text), this.readOnly || (t.contentEditable = \"true\", t.addEventListener(\"keyup\", this.onKeyUp)), t;\n  }\n  /**\n   * Return Tool's view\n   *\n   * @returns {HTMLDivElement}\n   */\n  render() {\n    return this._element = this.drawView(), this._element;\n  }\n  /**\n   * Method that specified how to merge two Text blocks.\n   * Called by Editor.js by backspace at the beginning of the Block\n   *\n   * @param {ParagraphData} data\n   * @public\n   */\n  merge(t) {\n    if (!this._element)\n      return;\n    this._data.text += t.text;\n    const e = l(t.text);\n    this._element.appendChild(e), this._element.normalize();\n  }\n  /**\n   * Validate Paragraph block data:\n   * - check for emptiness\n   *\n   * @param {ParagraphData} savedData â€” data received after saving\n   * @returns {boolean} false if saved data is not correct, otherwise true\n   * @public\n   */\n  validate(t) {\n    return !(t.text.trim() === \"\" && !this._preserveBlank);\n  }\n  /**\n   * Extract Tool's data from the view\n   *\n   * @param {HTMLDivElement} toolsContent - Paragraph tools rendered view\n   * @returns {ParagraphData} - saved data\n   * @public\n   */\n  save(t) {\n    return {\n      text: t.innerHTML\n    };\n  }\n  /**\n   * On paste callback fired from Editor.\n   *\n   * @param {HTMLPasteEvent} event - event with pasted data\n   */\n  onPaste(t) {\n    const e = {\n      text: t.detail.data.innerHTML\n    };\n    this._data = e, window.requestAnimationFrame(() => {\n      this._element && (this._element.innerHTML = this._data.text || \"\");\n    });\n  }\n  /**\n   * Enable Conversion Toolbar. Paragraph can be converted to/from other tools\n   * @returns {ConversionConfig}\n   */\n  static get conversionConfig() {\n    return {\n      export: \"text\",\n      // to convert Paragraph to other block, use 'text' property of saved data\n      import: \"text\"\n      // to covert other block's exported string to Paragraph, fill 'text' property of tool data\n    };\n  }\n  /**\n   * Sanitizer rules\n   * @returns {SanitizerConfig} - Edtior.js sanitizer config\n   */\n  static get sanitize() {\n    return {\n      text: {\n        br: !0\n      }\n    };\n  }\n  /**\n   * Returns true to notify the core that read-only mode is supported\n   *\n   * @returns {boolean}\n   */\n  static get isReadOnlySupported() {\n    return !0;\n  }\n  /**\n   * Used by Editor paste handling API.\n   * Provides configuration to handle P tags.\n   *\n   * @returns {PasteConfig} - Paragraph Paste Setting\n   */\n  static get pasteConfig() {\n    return {\n      tags: [\"P\"]\n    };\n  }\n  /**\n   * Icon and title for displaying at the Toolbox\n   *\n   * @returns {ToolboxConfig} - Paragraph Toolbox Setting\n   */\n  static get toolbox() {\n    return {\n      icon: a,\n      title: \"Text\"\n    };\n  }\n}\nexport {\n  n as default\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}